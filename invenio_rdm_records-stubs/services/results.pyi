from typing import Any, Iterable

from flask_principal import Identity
from invenio_records_resources.services.base.results import ServiceListResult
from invenio_records_resources.services.records.results import (
    ExpandableField,
    RecordList,
)

class ParentCommunitiesExpandableField(ExpandableField):
    def ghost_record(self, value: Any) -> dict[str, Any]: ...
    def system_record(self) -> Any: ...
    def get_value_service(self, value: Any) -> tuple[Any, Any]: ...
    def pick(self, identity: Identity, resolved_rec: Any) -> Any: ...

class GrantSubjectExpandableField(ExpandableField):
    _system_roles_service: Any
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def ghost_record(self, value: Any) -> Any: ...
    def system_record(self) -> Any: ...
    def get_value_service(self, value: dict[str, Any]) -> tuple[Any, Any | None]: ...
    def pick(self, identity: Identity, resolved_rec: Any) -> Any: ...

class RDMRecordList(RecordList):
    @property
    def hits(self): ...

class RDMRecordRevisionsList(ServiceListResult):
    _identity: Any
    _revisions: Iterable[Any]
    def __init__(self, identity: Identity, revisions: Iterable[Any]) -> None: ...
    def to_dict(self) -> list[dict[str, Any]]: ...
    def __iter__(self): ...
