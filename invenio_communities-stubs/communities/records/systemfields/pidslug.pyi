from typing import Any, Optional, Type

from invenio_communities.communities.records.api import Community
from invenio_records.systemfields import SystemField, SystemFieldContext
from invenio_records_resources.records.api import PersistentIdentifierWrapper

class PIDSlugFieldContext(SystemFieldContext):
    def parse_pid(self, value: str) -> str: ...
    def resolve(self, pid_value: str, registered_only: bool = True) -> Community: ...

class PIDSlugField(SystemField):
    def __init__(self, id_field: str, slug_field: str) -> None: ...
    def obj(self, record: Community) -> PersistentIdentifierWrapper: ...
    def __get__(
        self, record: Optional[Community], owner: Optional[Type[Community]] = None
    ) -> Any: ...
    def pre_commit(self, record: Community) -> None: ...
