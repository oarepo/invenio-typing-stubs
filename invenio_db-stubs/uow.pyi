from typing import Any, Generator, Optional

class UnitOfWork:
    def __enter__(self) -> UnitOfWork: ...
    def __exit__(self, exc_type: None, exc_value: None, traceback: None) -> None: ...
    def __init__(self, session: Any = ...): ...
    def _mark_dirty(self) -> None: ...
    def commit(self) -> None: ...
    def register(self, op: Operation) -> None: ...
    def rollback(self, exception: Optional[Exception] = ...) -> None: ...
    @property
    def session(self) -> Any: ...

def unit_of_work(**kwargs: Any) -> Generator[UnitOfWork, None, None]: ...

class Operation:
    def on_commit(self, uow: UnitOfWork) -> None: ...
    def on_exception(self, uow: UnitOfWork, exception: Exception) -> None: ...
    def on_post_commit(self, uow: UnitOfWork) -> None: ...
    def on_post_rollback(self, uow: UnitOfWork) -> None: ...
    def on_rollback(self, uow: UnitOfWork) -> None: ...
    def on_register(self, uow: UnitOfWork) -> None: ...

class ModelCommitOp(Operation):
    def __init__(self, model: Any) -> None: ...
    def on_register(self, uow: UnitOfWork) -> None: ...

class ModelDeleteOp(Operation):
    def __init__(self, model: Any) -> None: ...
    def on_register(self, uow: UnitOfWork) -> None: ...
