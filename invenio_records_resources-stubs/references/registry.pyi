import abc
from abc import ABC, abstractmethod

class ResolverRegistryBase(ABC, metaclass=abc.ABCMeta):
    @classmethod
    @abstractmethod
    def get_registered_resolvers(cls): ...
    @classmethod
    def resolve_entity_proxy(cls, reference_dict, raise_: bool = False): ...
    @classmethod
    def resolve_entity(cls, reference_dict, raise_: bool = False): ...
    @classmethod
    def resolve_need(cls, reference_dict, raise_: bool = False, ctx=None): ...
    @classmethod
    def reference_entity(cls, entity, raise_: bool = False): ...
    @classmethod
    def reference_identity(cls, identity, raise_: bool = False): ...
